{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/AnnouncementBar.js","webpack:///./src/components/Footer.js","webpack:///./src/components/Grid.js","webpack:///./src/components/NavBar.js","webpack:///./src/components/header.js","webpack:///./src/components/Wrapper.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","gatsby__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","SecondPage","a","createElement","title","to","d","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","Bar","styled","div","_templateObject","AnnouncementBar","react_default","gatsby_browser_entry","allDataJson","edges","node","announcementBar","text","_492720471","Root","Footer_templateObject","Menu","ul","_templateObject2","Item","li","_templateObject3","Text","_templateObject4","Footer","footer","dataJson","console","log","links","map","i","path","_703477771","Grid_templateObject","Grid_templateObject2","Number","Grid_templateObject3","Center","span","Grid_templateObject4","id","date","Grid","Grid_Root","Grid_Item","Grid_Number","NavBar_templateObject","NavBar_templateObject2","NavBar_templateObject3","primary","NavBar","NavBar_Root","NavBar_Menu","navBar","NavBar_Item","_3999498084","header","header_templateObject","Logo","h1","header_templateObject2","Header","siteTitle","header_Root","components_NavBar","Wrapper","Wrapper_templateObject","Layout","Fragment","components_AnnouncementBar","components_Wrapper","components_Grid","components_Footer","_755544856"],"mappings":"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","file":"component---src-pages-about-js-07bf9d356d692a4f5a9a.js","sourcesContent":["import { Link } from 'gatsby';\nimport React from 'react';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst SecondPage = () => (\n  <Layout>\n    <SEO title=\"Page two\" />\n    <h1>Hi from the second page</h1>\n    <p>Welcome to page 2</p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n);\n\nexport default SecondPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { graphql, StaticQuery } from 'gatsby';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst Bar = styled.div`\n  height: 50px;\n  text-align: center;\n  background-color: #3549bb;\n  color: #fff;\n  line-height: 50px;\n`;\n\nconst AnnouncementBar = () => {\n  return (\n    <StaticQuery\n      query={graphql`\n        {\n          allDataJson {\n            edges {\n              node {\n                announcementBar {\n                  text\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={(data) => (\n        <Bar>{data.allDataJson.edges[0].node.announcementBar.text}</Bar>\n      )}\n    />\n  );\n};\n\nexport default AnnouncementBar;\n","import { graphql, Link, StaticQuery } from 'gatsby';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst Root = styled.div`\n  padding-top: 60px;\n  background-color: #222;\n  color: #fff;\n  height: 120px;\n  text-align: center;\n`;\n\nconst Menu = styled.ul`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-content: center;\n`;\n\nconst Item = styled.li`\n  display: inline-flex;\n  margin-right: 10px;\n  a {\n    color: #ffca00;\n    text-decoration: none;\n  }\n`;\n\nconst Text = styled.div`\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n`;\n\nconst Footer = () => {\n  return (\n    <StaticQuery\n      query={graphql`\n        {\n          dataJson {\n            footer {\n              text\n              links {\n                name\n                path\n              }\n            }\n          }\n        }\n      `}\n      render={({ dataJson: { footer } }) =>\n        console.log(footer) || (\n          <Root>\n            <Menu>\n              {footer.links.map((i) => (\n                <Item>\n                  <Link to={i.path}>{i.name}</Link>\n                </Item>\n              ))}\n            </Menu>\n            <Text>{footer.text}</Text>\n          </Root>\n        )\n      }\n    />\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin: 20px 0;\n  flex-wrap: wrap;\n`;\n\nconst Item = styled.div`\n  position: relative;\n  border: solid 1px #ffca00;\n  background-color: white;\n  height: 200px;\n  margin-bottom: 20px;\n  display: flex;\n  align-items: center;\n  transition: background-color 0.15s ease-in;\n  cursor: pointer;\n  min-width: 340px;\n  justify-content: center;\n\n  &:hover {\n    background-color: rgba(255, 202, 0, 0.5);\n  }\n`;\n\nconst Number = styled.div`\n  position: absolute;\n  background-color: #ffca00;\n  color: white;\n  top: 0;\n  left: 0;\n  padding: 10px;\n`;\n\nconst Center = styled.span`\n  padding: 20px;\n  box-sizing: border-box;\n`;\n\nconst data = [\n  {\n    id: 1,\n    title: 'GraphQL con Algo',\n    date: 'Apr 15, 2019',\n  },\n  {\n    id: 2,\n    title: 'GraphQL con Algo',\n    date: 'Apr 15, 2019',\n  },\n  {\n    id: 3,\n    title: 'GraphQL con Algo',\n    date: 'Apr 15, 2019',\n  },\n  {\n    id: 4,\n    title: 'GraphQL con Algo',\n    date: 'Apr 15, 2019',\n  },\n  {\n    id: 5,\n    title: 'GraphQL con Algo',\n    date: 'Apr 15, 2019',\n  },\n  {\n    id: 6,\n    title: 'GraphQL con Algo',\n    date: 'Apr 15, 2019',\n  },\n];\n\nconst Grid = () => (\n  <Root>\n    {data.map((i) => (\n      <Item>\n        <Number>Ep: {i.id}</Number>\n        <Center>\n          {i.title} - {i.date}\n        </Center>\n      </Item>\n    ))}\n  </Root>\n);\n\nexport default Grid;\n","import { graphql, Link, StaticQuery } from 'gatsby';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst Root = styled.div`\n  flex: 1;\n`;\n\nconst Menu = styled.ul`\n  background-color: transparent;\n  color: #fff;\n  display: flex;\n  flex-direction: row-reverse;\n`;\n\nconst Item = styled.li`\n  text-transform: uppercase;\n  text-decoration: none;\n  list-style: none;\n  margin-right: 10px;\n  padding: 7px 14px;\n  border-radius: 5px;\n  font-weight: bold;\n  letter-spacing: 0.5px;\n\n  a {\n    text-decoration: none;\n    color: #222;\n    transition: color 0.15s ease-in;\n  }\n\n  ${(props) =>\n    props.primary &&\n    `background-color: #3549BB; color: #fff; a { color: #fff;}`}\n\n  &:hover {\n    a {\n      color: #ffca00;\n    }\n  }\n`;\n\nconst NavBar = () => {\n  return (\n    <StaticQuery\n      query={graphql`\n        {\n          allDataJson {\n            edges {\n              node {\n                navBar {\n                  links {\n                    name\n                    path\n                    primary\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={(data) => (\n        <Root>\n          <Menu>\n            {data.allDataJson.edges[0].node.navBar.links.map((i) => (\n              <Item primary={i.primary}>\n                <Link to={i.path}>{i.name}</Link>\n              </Item>\n            ))}\n          </Menu>\n        </Root>\n      )}\n    />\n  );\n};\n\nexport default NavBar;\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\nimport NavBar from './NavBar';\n\nconst Root = styled.header`\n  display: flex;\n  flex-direction: row;\n  height: 130px;\n  justify-content: center;\n  padding: 60px 0;\n  box-sizing: border-box;\n  border-bottom: solid 1px #ffca00;\n`;\n\nconst Logo = styled.h1`\n  flex: 0;\n  margin: 0;\n  align-content: center;\n  a {\n    text-decoration: none;\n    color: #222;\n  }\n`;\n\nconst Header = ({ siteTitle }) => (\n  <Root>\n    <Logo>\n      <Link to=\"/\">M37</Link>\n    </Logo>\n    <NavBar />\n  </Root>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  max-width: 1080px;\n  margin: 0 auto;\n`;\n\nexport default Wrapper;\n","import { graphql, StaticQuery } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport AnnouncementBar from './AnnouncementBar';\nimport Footer from './Footer';\nimport Grid from './Grid';\nimport Header from './header';\nimport Wrapper from './Wrapper';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={(data) => (\n      <>\n        <div>{children}</div>\n        <AnnouncementBar />\n        <Wrapper>\n          <Header siteTitle={data.site.siteMetadata.title} />\n          <main>\n            <Grid />\n          </main>\n          <Footer />\n        </Wrapper>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}