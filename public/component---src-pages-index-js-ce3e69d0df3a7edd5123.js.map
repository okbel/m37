{"version":3,"sources":["webpack:///./src/components/Grid.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/AnnouncementBar.js","webpack:///./src/components/Footer.js","webpack:///./src/components/NavBar.js","webpack:///./src/components/header.js","webpack:///./src/components/Wrapper.js","webpack:///./src/components/layout.js"],"names":["Root","styled","div","_templateObject","Item","_templateObject2","Number","_templateObject3","Center","span","_templateObject4","data","id","title","date","Grid","react_default","a","createElement","map","i","Grid_Number","IndexPage","layout","seo","keywords","components_Grid","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_2___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","Bar","AnnouncementBar","text","Footer_templateObject","Menu","ul","li","Text","Footer","links","gatsby_browser_entry","to","path","NavBar_templateObject","NavBar_templateObject2","NavBar_templateObject3","primary","NavBar","NavBar_Root","NavBar_Menu","dataJson","navBar","NavBar_Item","_370356928","header","header_templateObject","Logo","h1","header_templateObject2","Header","siteTitle","header_Root","components_NavBar","Wrapper","Wrapper_templateObject","Layout","_ref2","_ref2$dataJson$layout","announcementBar","footer","Fragment","components_AnnouncementBar","components_Wrapper","components_Footer","_4151820513","node"],"mappings":"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","file":"component---src-pages-index-js-ce3e69d0df3a7edd5123.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin: 20px 0;\n  flex-wrap: wrap;\n`;\n\nconst Item = styled.div`\n  position: relative;\n  border: solid 1px #ffca00;\n  background-color: white;\n  height: 200px;\n  margin-bottom: 20px;\n  display: flex;\n  align-items: center;\n  transition: background-color 0.15s ease-in;\n  cursor: pointer;\n  min-width: 340px;\n  justify-content: center;\n\n  &:hover {\n    background-color: rgba(255, 202, 0, 0.5);\n  }\n`;\n\nconst Number = styled.div`\n  position: absolute;\n  background-color: #ffca00;\n  color: white;\n  top: 0;\n  left: 0;\n  padding: 10px;\n`;\n\nconst Center = styled.span`\n  padding: 20px;\n  box-sizing: border-box;\n`;\n\nconst data = [\n  {\n    id: 1,\n    title: 'GraphQL con Algo',\n    date: 'Apr 15, 2019',\n  },\n  {\n    id: 2,\n    title: 'GraphQL con Algo',\n    date: 'Apr 15, 2019',\n  },\n  {\n    id: 3,\n    title: 'GraphQL con Algo',\n    date: 'Apr 15, 2019',\n  },\n  {\n    id: 4,\n    title: 'GraphQL con Algo',\n    date: 'Apr 15, 2019',\n  },\n  {\n    id: 5,\n    title: 'GraphQL con Algo',\n    date: 'Apr 15, 2019',\n  },\n  {\n    id: 6,\n    title: 'GraphQL con Algo',\n    date: 'Apr 15, 2019',\n  },\n];\n\nconst Grid = () => (\n  <Root>\n    {data.map((i) => (\n      <Item>\n        <Number>Ep: {i.id}</Number>\n        <Center>\n          {i.title} - {i.date}\n        </Center>\n      </Item>\n    ))}\n  </Root>\n);\n\nexport default Grid;\n","import 'normalize.css';\nimport React from 'react';\nimport Grid from '../components/Grid';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n    <Grid />\n  </Layout>\n);\n\nexport default IndexPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { graphql, useStaticQuery } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Helmet from 'react-helmet';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Bar = styled.div`\n  height: 50px;\n  text-align: center;\n  background-color: #3549bb;\n  color: #fff;\n  line-height: 50px;\n`;\n\nconst AnnouncementBar = ({ data }) => <Bar>{data.text}</Bar>;\n\nexport default AnnouncementBar;\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst Root = styled.div`\n  padding-top: 60px;\n  background-color: #222;\n  color: #fff;\n  height: 120px;\n  text-align: center;\n`;\n\nconst Menu = styled.ul`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-content: center;\n`;\n\nconst Item = styled.li`\n  display: inline-flex;\n  margin-right: 10px;\n  a {\n    color: #ffca00;\n    text-decoration: none;\n  }\n`;\n\nconst Text = styled.div`\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n`;\n\nconst Footer = ({ data }) => (\n  <Root>\n    <Menu>\n      {data.links.map((i) => (\n        <Item>\n          <Link to={i.path}>{i.name}</Link>\n        </Item>\n      ))}\n    </Menu>\n    <Text>{data.text}</Text>\n  </Root>\n);\n\nexport default Footer;\n","import { graphql, Link, StaticQuery } from 'gatsby';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst Root = styled.div`\n  flex: 1;\n`;\n\nconst Menu = styled.ul`\n  background-color: transparent;\n  color: #fff;\n  display: flex;\n  flex-direction: row-reverse;\n`;\n\nconst Item = styled.li`\n  text-transform: uppercase;\n  text-decoration: none;\n  list-style: none;\n  margin-right: 10px;\n  padding: 7px 14px;\n  border-radius: 5px;\n  font-weight: bold;\n  letter-spacing: 0.5px;\n\n  a {\n    text-decoration: none;\n    color: #222;\n    transition: color 0.15s ease-in;\n  }\n\n  ${(props) =>\n    props.primary &&\n    `background-color: #3549BB; color: #fff; a { color: #fff;}`}\n\n  &:hover {\n    a {\n      color: #ffca00;\n    }\n  }\n`;\n\nconst NavBar = () => {\n  return (\n    <StaticQuery\n      query={graphql`\n        {\n          dataJson {\n            layout {\n              navBar {\n                links {\n                  name\n                  path\n                  primary\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={(data) => (\n        <Root>\n          <Menu>\n            {data.dataJson.layout.navBar.links.map((i) => (\n              <Item primary={i.primary}>\n                <Link to={i.path}>{i.name}</Link>\n              </Item>\n            ))}\n          </Menu>\n        </Root>\n      )}\n    />\n  );\n};\n\nexport default NavBar;\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\nimport NavBar from './NavBar';\n\nconst Root = styled.header`\n  display: flex;\n  flex-direction: row;\n  height: 130px;\n  justify-content: center;\n  padding: 60px 0;\n  box-sizing: border-box;\n  border-bottom: solid 1px #ffca00;\n`;\n\nconst Logo = styled.h1`\n  flex: 0;\n  margin: 0;\n  align-content: center;\n  a {\n    text-decoration: none;\n    color: #222;\n  }\n`;\n\nconst Header = ({ siteTitle }) => (\n  <Root>\n    <Logo>\n      <Link to=\"/\">M37</Link>\n    </Logo>\n    <NavBar />\n  </Root>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  max-width: 1080px;\n  margin: 0 auto;\n`;\n\nexport default Wrapper;\n","import { graphql, StaticQuery } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport '../style.css';\nimport AnnouncementBar from './AnnouncementBar';\nimport Footer from './Footer';\nimport Header from './header';\nimport Wrapper from './Wrapper';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query LayoutQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n        dataJson {\n          layout {\n            announcementBar {\n              text\n            }\n            footer {\n              text\n              links {\n                name\n                path\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={({\n      site,\n      dataJson: {\n        layout: { announcementBar, footer },\n      },\n    }) => (\n      <>\n        <AnnouncementBar data={announcementBar} />\n        <Wrapper>\n          <Header siteTitle={site.siteMetadata.title} />\n          <main>{children}</main>\n          <Footer data={footer} />\n        </Wrapper>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}