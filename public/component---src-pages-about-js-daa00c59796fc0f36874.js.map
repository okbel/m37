{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/AnnouncementBar.js","webpack:///./src/components/Footer.js","webpack:///./src/components/NavBar.js","webpack:///./src/components/header.js","webpack:///./src/components/Wrapper.js","webpack:///./src/components/layout.js"],"names":["AboutPage","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","gatsby__WEBPACK_IMPORTED_MODULE_1__","query","render","_ref","_ref$dataJson$about","dataJson","about","title","text","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","data","_public_static_d_450013431_json__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","Bar","styled","div","_templateObject","AnnouncementBar","react_default","Root","Footer_templateObject","Menu","ul","_templateObject2","Item","li","_templateObject3","Text","_templateObject4","Footer","links","map","i","gatsby_browser_entry","to","path","NavBar_templateObject","NavBar_templateObject2","NavBar_templateObject3","primary","NavBar","NavBar_Root","NavBar_Menu","layout","navBar","NavBar_Item","_370356928","header","header_templateObject","Logo","h1","header_templateObject2","Header","siteTitle","header_Root","components_NavBar","Wrapper","Wrapper_templateObject","Layout","_ref2","_ref2$dataJson$layout","announcementBar","footer","Fragment","components_AnnouncementBar","components_Wrapper","components_Footer","_4151820513","node"],"mappings":"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","file":"component---src-pages-about-js-daa00c59796fc0f36874.js","sourcesContent":["import { graphql, StaticQuery } from 'gatsby';\nimport React from 'react';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst AboutPage = () => (\n  <StaticQuery\n    query={graphql`\n      query AboutQuery {\n        dataJson {\n          about {\n            title\n            text\n          }\n        }\n      }\n    `}\n    render={({\n      dataJson: {\n        about: { title, text },\n      },\n    }) => (\n      <Layout>\n        <SEO title=\"About\" />\n        <h1>{title}</h1>\n        <p>{text}</p>\n      </Layout>\n    )}\n  />\n);\n\nexport default AboutPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { graphql, useStaticQuery } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Helmet from 'react-helmet';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Bar = styled.div`\n  height: 50px;\n  text-align: center;\n  background-color: #3549bb;\n  color: #fff;\n  line-height: 50px;\n`;\n\nconst AnnouncementBar = ({ data }) => <Bar>{data.text}</Bar>;\n\nexport default AnnouncementBar;\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst Root = styled.div`\n  padding-top: 60px;\n  background-color: #222;\n  color: #fff;\n  height: 120px;\n  text-align: center;\n`;\n\nconst Menu = styled.ul`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-content: center;\n`;\n\nconst Item = styled.li`\n  display: inline-flex;\n  margin-right: 10px;\n  a {\n    color: #ffca00;\n    text-decoration: none;\n  }\n`;\n\nconst Text = styled.div`\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n`;\n\nconst Footer = ({ data }) => (\n  <Root>\n    <Menu>\n      {data.links.map((i) => (\n        <Item>\n          <Link to={i.path}>{i.name}</Link>\n        </Item>\n      ))}\n    </Menu>\n    <Text>{data.text}</Text>\n  </Root>\n);\n\nexport default Footer;\n","import { graphql, Link, StaticQuery } from 'gatsby';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst Root = styled.div`\n  flex: 1;\n`;\n\nconst Menu = styled.ul`\n  background-color: transparent;\n  color: #fff;\n  display: flex;\n  flex-direction: row-reverse;\n`;\n\nconst Item = styled.li`\n  text-transform: uppercase;\n  text-decoration: none;\n  list-style: none;\n  margin-right: 10px;\n  padding: 7px 14px;\n  border-radius: 5px;\n  font-weight: bold;\n  letter-spacing: 0.5px;\n\n  a {\n    text-decoration: none;\n    color: #222;\n    transition: color 0.15s ease-in;\n  }\n\n  ${(props) =>\n    props.primary &&\n    `background-color: #3549BB; color: #fff; a { color: #fff;}`}\n\n  &:hover {\n    a {\n      color: #ffca00;\n    }\n  }\n`;\n\nconst NavBar = () => {\n  return (\n    <StaticQuery\n      query={graphql`\n        {\n          dataJson {\n            layout {\n              navBar {\n                links {\n                  name\n                  path\n                  primary\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={(data) => (\n        <Root>\n          <Menu>\n            {data.dataJson.layout.navBar.links.map((i) => (\n              <Item primary={i.primary}>\n                <Link to={i.path}>{i.name}</Link>\n              </Item>\n            ))}\n          </Menu>\n        </Root>\n      )}\n    />\n  );\n};\n\nexport default NavBar;\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\nimport NavBar from './NavBar';\n\nconst Root = styled.header`\n  display: flex;\n  flex-direction: row;\n  height: 130px;\n  justify-content: center;\n  padding: 60px 0;\n  box-sizing: border-box;\n  border-bottom: solid 1px #ffca00;\n`;\n\nconst Logo = styled.h1`\n  flex: 0;\n  margin: 0;\n  align-content: center;\n  a {\n    text-decoration: none;\n    color: #222;\n  }\n`;\n\nconst Header = ({ siteTitle }) => (\n  <Root>\n    <Logo>\n      <Link to=\"/\">M37</Link>\n    </Logo>\n    <NavBar />\n  </Root>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  max-width: 1080px;\n  margin: 0 auto;\n`;\n\nexport default Wrapper;\n","import { graphql, StaticQuery } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport '../style.css';\nimport AnnouncementBar from './AnnouncementBar';\nimport Footer from './Footer';\nimport Header from './header';\nimport Wrapper from './Wrapper';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query LayoutQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n        dataJson {\n          layout {\n            announcementBar {\n              text\n            }\n            footer {\n              text\n              links {\n                name\n                path\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={({\n      site,\n      dataJson: {\n        layout: { announcementBar, footer },\n      },\n    }) => (\n      <>\n        <AnnouncementBar data={announcementBar} />\n        <Wrapper>\n          <Header siteTitle={site.siteMetadata.title} />\n          <main>{children}</main>\n          <Footer data={footer} />\n        </Wrapper>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}